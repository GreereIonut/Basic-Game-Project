  @model PaginatedList<Games.Models.GameModel>


@{
    ViewData["Title"] = "Games";
}

<h2>Games</h2>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" >Title</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["GenereSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Genere</a>

                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
               @item.Title
            </td>
            <td>
               @item.Genere 
            </td>
           
            <td>
                @* <a asp-action="Edit" asp-route-gmaeId="@item.Id">Edit</a> | *@
                <a asp-action="Review" asp-controller="Reviews" asp-route-gameId="@item.Id">Write a review!</a> |
                <a asp-action="SeeReviews" asp-controller="Reviews"  asp-route-gameId="@item.Id">See Reviews!</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


@for(int i=1;i<=Model.TotalPages;i++)
{
    <a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-pageNumber=@i
    class="btn btn-primary @(i == Model.PageIndex ? "active" : "")"
    > 
    <small>@i</small>

    </a>
}


    




   

